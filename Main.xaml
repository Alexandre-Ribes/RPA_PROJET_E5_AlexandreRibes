<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugage="clr-namespace:UiPath.GSuite.Activities.Gmail.Enums;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Enums</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Internal</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Workflow.Runtime</x:String>
      <x:String>System.Activities.Tracking</x:String>
      <x:String>System.Activities.Statements.Tracking</x:String>
      <x:String>System.Activities.Runtime</x:String>
      <x:String>System.Activities.Runtime.DurableInstancing</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.ParallelTracking</x:String>
      <x:String>System.Activities.Hosting</x:String>
      <x:String>System.Activities.Persistence</x:String>
      <x:String>System.Activities.DurableInstancing</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Security.Authentication.ExtendedProtection</x:String>
      <x:String>System.Timers</x:String>
      <x:String>System.ComponentModel.Design</x:String>
      <x:String>System.Xml.Schema</x:String>
      <x:String>System.Xml.Xsl</x:String>
      <x:String>System.Xml.Xsl.Runtime</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic.Syntax</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Mail.Activities.Enums</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Validation</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Net.Security</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.Features</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1084.6666666666665,5493.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="OrdersDataTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="ProductsDataTable" />
      <Variable x:TypeArguments="sd:DataRow[]" Name="matchingProducts" />
      <Variable x:TypeArguments="sd:DataRow" Name="productRow" />
      <Variable x:TypeArguments="x:Int32" Name="productRow__Stock__" />
      <Variable x:TypeArguments="x:Object" Name="orderRow__Status__" />
      <Variable x:TypeArguments="s:DateTime" Name="orderRow__ShippingDate__" />
      <Variable x:TypeArguments="x:Int32" Name="productRow__Stock_Disponible__" />
      <Variable x:TypeArguments="x:Object" Name="CurrentRow__Statut_Commande__" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="584,946.6666666666666" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Faire" sap:VirtualizedContainerService.HintSize="546,827.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="512,767.3333333333334" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="C:\Users\aribe\Desktop\Commandes_Maquettes_Militaires.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Faire" sap:VirtualizedContainerService.HintSize="478,464" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,206.66666666666666" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;Commandes&quot;)]" SaveTo="[OrdersDataTable]" />
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,197.33333333333334" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;Produits&quot;)]" SaveTo="[ProductsDataTable]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[OrdersDataTable]" DisplayName="Pour chaque ligne dans le DataTable &quot;Commandes&quot; (limité aux 6 premières commandes) :" sap:VirtualizedContainerService.HintSize="584,3430" sap2010:WorkflowViewState.IdRef="ForEachRow_1" MaxIterations="6">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="582,3246" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Utiliser Try Catch pour la gestion des erreurs pendant le traitement." sap:VirtualizedContainerService.HintSize="548,3186" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence DisplayName="Essayer" sap:VirtualizedContainerService.HintSize="542,2846" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Vérifier la disponibilité du produit dans le DataTable &quot;Produits&quot;." sap:VirtualizedContainerService.HintSize="508,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow[]">[matchingProducts]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow[]">[ProductsDataTable.Select("Nom_Produit = '" &amp; CurrentRow("Modèle_Commandé").ToString() &amp; "'")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[matchingProducts.Length &gt; 0]" DisplayName="Si un produit correspondant est trouvé :" sap:VirtualizedContainerService.HintSize="508,2501.3333333333335" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="506,2270.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Attribuer la ligne de produit trouvée à une variable." sap:VirtualizedContainerService.HintSize="472,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[productRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[matchingProducts(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Obtenir le stock disponible sous forme d'entier." sap:VirtualizedContainerService.HintSize="472,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[productRow__Stock__]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(productRow("Stock_Disponible"))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[productRow__Stock__ &gt;= Convert.ToInt32(CurrentRow(&quot;Quantité&quot;))]" DisplayName="Si le stock est disponible :" sap:VirtualizedContainerService.HintSize="472,1976" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="470,682.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Mettre à jour le stock dans le DataTable &quot;Produits&quot;." sap:VirtualizedContainerService.HintSize="436,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[productRow__Stock_Disponible__]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[productRow__Stock__ - Convert.ToInt32(CurrentRow("Quantité"))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Mettre à jour le &quot;Statut_Commande&quot; à &quot;Validé&quot; dans le DataTable &quot;Commandes&quot;." sap:VirtualizedContainerService.HintSize="436,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[CurrentRow__Statut_Commande__]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["Validé"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" ConnectionId="6c8d91d4-d139-4c71-8488-183a2dc8c4b4" DisplayName="Envoyer un e-mail de confirmation au client." sap:VirtualizedContainerService.HintSize="436,388" sap2010:WorkflowViewState.IdRef="SendEmailConnections_1" Importance="Normal" InputType="TEXT" SaveAsDraft="False" Subject="[&quot;Order Confirmation: &quot; &amp; CurrentRow(&quot;ID_Commande&quot;).ToString()]" TextBody="[&quot;&lt;P&gt;&lt;SPAN&gt;Dear &lt;/SPAN&gt;&lt;SPAN&gt;&quot; &amp; CurrentRow(&quot;Nom_Client&quot;).ToString() &amp; &quot;&lt;/SPAN&gt;&lt;SPAN&gt;,Your order for &lt;/SPAN&gt;&lt;SPAN&gt;&quot; &amp; CurrentRow(&quot;Modèle_Commandé&quot;).ToString() &amp; &quot;&lt;/SPAN&gt;&lt;SPAN&gt; has been validated and will be shipped soon.Thank you for your purchase!&lt;/SPAN&gt;&lt;/P&gt;&quot;]" To="[Enumerable.Repeat(CurrentRow(&quot;Email_Client&quot;).ToString(), 1)]" UseConnectionService="True">
                                <uga:SendEmailConnections.Attachments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                </uga:SendEmailConnections.Attachments>
                                <uga:SendEmailConnections.AttachmentsBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.AttachmentsBackup>
                                <uga:SendEmailConnections.Body>
                                  <InArgument x:TypeArguments="x:String" />
                                </uga:SendEmailConnections.Body>
                                <uga:SendEmailConnections.InputTypeBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="TEXT">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:List x:TypeArguments="x:Object" x:Key="HTML" Capacity="1">
                                        <InArgument x:TypeArguments="x:String" />
                                      </scg:List>
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.InputTypeBackup>
                              </uga:SendEmailConnections>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="470,1162.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Mettre à jour le &quot;Statut_Commande&quot; à &quot;En attente de réapprovisionnement&quot; dans le DataTable &quot;Commandes&quot;." sap:VirtualizedContainerService.HintSize="436,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[CurrentRow__Statut_Commande__]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["En attente de réapprovisionnement"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;Dear &lt;/SPAN&gt;&lt;SPAN&gt;{0}&lt;/SPAN&gt;&lt;SPAN&gt;,We regret to inform you that the product &lt;/SPAN&gt;&lt;SPAN&gt;{1}&lt;/SPAN&gt;&lt;SPAN&gt; is currently out of stock. Your order is on hold and will be processed as soon as we restock.We apologize for the inconvenience.&lt;/SPAN&gt;&lt;/P&gt;&quot;, CurrentRow(&quot;Nom_Client&quot;), CurrentRow(&quot;Modèle_Commandé&quot;))]" ConnectionId="6c8d91d4-d139-4c71-8488-183a2dc8c4b4" DisplayName="Envoyer un e-mail au client concernant le stock indisponible." sap:VirtualizedContainerService.HintSize="436,497.3333333333333" sap2010:WorkflowViewState.IdRef="SendEmailConnections_2" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[&quot;Order Update: &quot; &amp; CurrentRow(&quot;ID_Commande&quot;).ToString() &amp; &quot; - Awaiting Restock&quot;]" To="[Enumerable.Repeat(CurrentRow(&quot;Email_Client&quot;).ToString(), 1)]" UseConnectionService="True">
                                <uga:SendEmailConnections.Attachments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                </uga:SendEmailConnections.Attachments>
                                <uga:SendEmailConnections.AttachmentsBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.AttachmentsBackup>
                                <uga:SendEmailConnections.InputTypeBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.InputTypeBackup>
                              </uga:SendEmailConnections>
                              <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;Stock alert:The product &lt;/SPAN&gt;&lt;SPAN&gt;{0}&lt;/SPAN&gt;&lt;SPAN&gt; (Reference: &lt;/SPAN&gt;&lt;SPAN&gt;{1}&lt;/SPAN&gt;&lt;SPAN&gt;) is out of stock. Please initiate restocking procedures.&lt;/SPAN&gt;&lt;/P&gt;&quot;, productRow(&quot;Nom_Produit&quot;), productRow(&quot;Référence_Produit&quot;))]" ConnectionId="6c8d91d4-d139-4c71-8488-183a2dc8c4b4" DisplayName="Envoyer un e-mail de notification au service logistique." sap:VirtualizedContainerService.HintSize="436,488" sap2010:WorkflowViewState.IdRef="SendEmailConnections_3" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[&quot;Stock Alert: &quot; &amp; productRow(&quot;Nom_Produit&quot;).ToString()]" To="[New List(Of String) From {&quot;logistics@example.com&quot;}]" UseConnectionService="True">
                                <uga:SendEmailConnections.Attachments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                </uga:SendEmailConnections.Attachments>
                                <uga:SendEmailConnections.AttachmentsBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.AttachmentsBackup>
                                <uga:SendEmailConnections.InputTypeBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.InputTypeBackup>
                              </uga:SendEmailConnections>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="506,90.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:LogMessage DisplayName="Enregistrer les détails de l'opération." sap:VirtualizedContainerService.HintSize="508,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(&quot;Processed Order ID: {0}, Status: {1}&quot;, CurrentRow(&quot;ID_Commande&quot;), CurrentRow__Statut_Commande__)]" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="542,90.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
              <TryCatch.Finally>
                <Sequence DisplayName="Enfin" sap:VirtualizedContainerService.HintSize="542,90.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </TryCatch.Finally>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="584,926.6666666666666" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Faire" sap:VirtualizedContainerService.HintSize="536,807.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="502,747.3333333333334" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="C:\Users\aribe\Desktop\Commandes_Maquettes_Militaires.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Faire" sap:VirtualizedContainerService.HintSize="468,444" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Commandes&quot;)]" DisplayName="Write TableDonnées to Excel" sap:VirtualizedContainerService.HintSize="434,196.66666666666666" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[OrdersDataTable]" />
                    <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Produits&quot;)]" DisplayName="Write TableDonnées to Excel" sap:VirtualizedContainerService.HintSize="434,187.33333333333334" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[ProductsDataTable]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
    <ui:LogMessage DisplayName="Enregistrer la fin du processus." sap:VirtualizedContainerService.HintSize="584,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Order processing completed successfully.&quot;]" />
  </Sequence>
</Activity>